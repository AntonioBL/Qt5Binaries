#!/bin/bash

# Run this file inside an Ubuntu Bionic Docker image

#Set architecture: amd64, i386
ARCH=$1

set -e # Halt on error
set -x # Be verbose

# Fetch dependencies for Qt compilation
echo "fetching dependencies for arch: $ARCH"

# General dependencies
apt-get update
apt-get install -y \
  pkg-config \
  apt-utils \
  bison \
  build-essential \
  cmake \
  flex \
  g++ \
  git \
  gperf \
  gzip \
  ninja-build \
  p7zip-full \
  perl \
  python \
  ruby \
  tar \
  wget

export DEBIAN_FRONTEND="noninteractive"
export TZ="Europe/London"

# Specific dependencies for Qt5
apt-get install -y \
    '^libxcb.*-dev' \
    flite1-dev \
    libatspi2.0-dev \
    libavcodec-dev \
    libcups2-dev \
    libegl1-mesa \
    libfontconfig1-dev \
    libfreetype6-dev \
    libgles2-mesa-dev \
    libgles2-mesa \
    libgtk-3-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libicu-dev \
    libspeechd-dev \
    libx11-dev \
    libx11-xcb-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxrender-dev \
    libxslt-dev \
    speech-dispatcher \
    zlib1g-dev

# Specific dependencies for Qt WebEngine
apt-get install -y \
    ffmpeg \
    icu-devtools \
    libasound2-dev \
    libavcodec-dev \
    libavdevice-dev \
    libavfilter-dev \
    libavformat-dev \
    libavresample-dev \
    libavutil-dev \
    libcap-dev \
    libcups2 \
    libdbus-1-dev \
    libdrm-dev \
    libegl1-mesa-dev \
    libevent-dev \
    libexpat1-dev \
    libharfbuzz-dev \
    libharfbuzz-icu0 \
    libharfbuzz0b \
    libicu-dev \
    libicu-le-hb-dev \
    libicu60 \
    libnss3-dev \
    libopus0 \
    libopus-dev \
    libopusfile0 \
    libopusfile-dev \
    libpci-dev \
    libprotobuf-dev \
    libpulse-dev \
    libsnappy-dev \
    libre2-dev \
    libvpx-dev \
    libxcomposite-dev \
    libxcursor-dev \
    libxdamage-dev \
    libxkbfile-dev \
    libxrandr-dev \
    libxss-dev \
    libxtst-dev \
    libudev-dev \
    libwebp6 \
    libwebpdemux2 \
    libwebpmux3 \
    libwebp-dev \
    libxau-dev \
    nodejs \
    opus-tools

# Specific dependencies for Qt Multimedia
apt-get install -y \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-good1.0-dev \
    libgstreamer-plugins-bad1.0-dev

# Specific dependencies for SSL support
apt-get install -y \
    libgcrypt11-dev \
    libssl1.1 \
    libssl-dev \
    openssl

# sudo apt-get install  libatkmm-1.6-dev libbz2-dev 


#    xkb-data \
#    libxkbcommon-x11-0 \
#    libsndfile1-dev \
#    portaudio19-dev \
#    libportmidi-dev \
#    libmp3lame-dev \
#    libfontconfig1 \
#    libjsoncpp-dev \
#    alsa-tools \
#    alsa-utils \
#    libasound2-plugins \
#    pulseaudio \
#    liblcms2-2 \
#    libmng1 \
#    libpulse0 \
#    libjson-c-dev \
#    libdbus-1-3 \
#    libglib2.0-0 \
#    libkeyutils-dev \
#    libwrap0 \
#    libacl1 \
#    libpcre3 \
#    at-spi2-core \
#    libxkbcommon0 \
#    libpango1.0-dev \
#    x11proto-dev \
#    shared-mime-info \


apt-get clean

# Fetch KDE-patched Qt sources, compile and install it

git clone --branch kde/5.15 https://invent.kde.org/qt/qt/qt5.git qt5source
cd qt5source
git checkout kde/5.15
git submodule update --init --recursive --depth 1


# Workaround for armhf case for Qt 5.x
if [ "$ARCH" == "armhf" ]
then
  cp -r qtbase/mkspecs/linux-arm-gnueabi-g++ qtbase/mkspecs/linux-arm-gnueabihf-g++
  sed -i 's/gnueabi/gnueabihf/g' qtbase/mkspecs/linux-arm-gnueabihf-g++/qmake.conf
fi

mkdir build
cd build

# Configure Qt
../configure -release -prefix /qt5 -opensource -confirm-license -platform linux-g++ -make examples \
-nomake tests -skip qt3d -skip qtcanvas3d -skip qtdatavis3d -skip qtdoc -skip qtdocgallery -skip qtgamepad \
-skip qtpurchasing -skip qtsensors -skip qtwebengine -cups -accessibility -opengl desktop -gtk -pkg-config

# -opengl dynamic ?

make -j $(($(nproc)+1))
make install -j $(($(nproc)+1))

# Cleanup Docker image
cd .. && rm -rf build
apt-get clean autoclean
apt-get autoremove --purge -y
rm -rf /tmp/* /var/{cache,log,backups}/* /var/lib/apt/*

echo 'Recipe1 completed'
